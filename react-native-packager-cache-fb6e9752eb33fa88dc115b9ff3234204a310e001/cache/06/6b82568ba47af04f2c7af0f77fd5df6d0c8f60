Object.defineProperty(exports,"__esModule",{value:true});var _reactVr=require("react-vr");

var lightMixin=function lightMixin(Base){return function(_Base){babelHelpers.inherits(_class,_Base);

function _class(){babelHelpers.classCallCheck(this,_class);var _this=babelHelpers.possibleConstructorReturn(this,(_class.__proto__||Object.getPrototypeOf(_class)).call(this));

_this.animationRequestId=null;
// 1 - day, 0 - night
_this.state={light:new _reactVr.Animated.Value(0.001)};return _this;
}babelHelpers.createClass(_class,[{key:"animationLoop",value:function animationLoop(

condition,stepValue,callback){var _this2=this;
var step=function step(){
if(condition(_this2.state.light)){
return callback&&callback();
}
_this2.setState({light:_this2.state.light+stepValue});
_this2.animationRequestId=requestAnimationFrame(step);
};
this.animationRequestId=requestAnimationFrame(step);
}},{key:"offLight",value:function offLight(

callback){
_reactVr.Animated.timing(
this.state.light,
{
toValue:0.001,
duration:800}).

start(function(){return callback&&callback();});
// this.cancelCurrentAnimationRequest();
// this.animationLoop(
//     (v) => v <= 0,
//     - 0.025,
//     callback
// );
}},{key:"onLight",value:function onLight(

callback){
console.log(this.state.light);
_reactVr.Animated.timing(
this.state.light,
{
toValue:1,
duration:800,
delay:500}).

start(function(){return callback&&callback();});
// this.cancelCurrentAnimationRequest();
// this.animationLoop(
//     (v) => v >= 1,
//     0.025,
//     callback
// );
}},{key:"putOutLight",value:function putOutLight(

endValue,callback){
_reactVr.Animated.timing(
this.state.light,
{
toValue:endValue,
duration:600}).

start(function(){return callback&&callback();});
// this.cancelCurrentAnimationRequest();
// this.animationLoop(
//     (v) => v <= endValue,
//     - 0.025,
//     callback
// );
}

// cancelCurrentAnimationRequest() {
//     if (this.animationRequestId) {
//         cancelAnimationFrame(this.animationRequestId);
//     }
// }
//
// componentWillUnmount() {
//     this.cancelCurrentAnimationRequest();
// }
}]);return _class;}(Base);};exports.default=

lightMixin;